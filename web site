from flask import Flask, request, render_template_string, redirect, url_for
import json
import os

app = Flask(__name__)

# Файл для сохранения списка задач
DATA_FILE = 'tasks.json'

# Функция для загрузки задач из файла
def load_tasks():
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, 'r') as f:
            return json.load(f)
    return []

# Функция для сохранения задач в файл
def save_tasks(tasks):
    with open(DATA_FILE, 'w') as f:
        json.dump(tasks, f)

# Загружаем задачи при старте
tasks = load_tasks()

# Шаблон HTML для отображения задач и формы добавления
html_code = """
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Список задач</title>
    <style>
        body { font-family: Arial, sans-serif; background-color: #f4f4f9; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; background: #fff; border-radius: 8px; }
        h1 { text-align: center; }
        form { margin-bottom: 20px; }
        ul { list-style-type: none; padding: 0; }
        li { margin: 8px 0; padding: 8px; background: #eaeaea; border-radius: 4px; }
        button { padding: 6px 12px; cursor: pointer; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Мой список задач</h1>
        <form action="/add" method="post">
            <input type="text" name="task" placeholder="Новая задача" required>
            <button type="submit">Добавить</button>
        </form>
        <ul>
            {% for task in tasks %}
            <li>
                {{ task }}
                <form action="/delete" method="post" style="display: inline;">
                    <input type="hidden" name="task" value="{{ task }}">
                    <button type="submit">Удалить</button>
                </form>
            </li>
            {% endfor %}
        </ul>
    </div>
</body>
</html>
"""

# Главная страница с отображением списка задач
@app.route('/')
def index():
    return render_template_string(html_code, tasks=tasks)

# Маршрут для добавления задачи
@app.route('/add', methods=['POST'])
def add_task():
    task = request.form.get('task')
    if task:
        tasks.append(task)
        save_tasks(tasks)
    return redirect(url_for('index'))

# Маршрут для удаления задачи
@app.route('/delete', methods=['POST'])
def delete_task():
    task = request.form.get('task')
    if task in tasks:
        tasks.remove(task)
        save_tasks(tasks)
    return redirect(url_for('index'))

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)
